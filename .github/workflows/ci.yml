name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# Minimal permissions (keeps gitleaks happy on PRs)
permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Install dependencies (Yarn Classic)
        run: |
          corepack enable
          yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

  typecheck:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Install dependencies (Yarn Classic)
        run: |
          corepack enable
          yarn install --frozen-lockfile

      - name: Typecheck
        run: yarn typecheck

  test:
    runs-on: ubuntu-latest
    env:
      CI: true
      EXPO_USE_STATIC: '1'  # helps Expo/Metro in CI
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Install dependencies (Yarn Classic)
        run: |
          corepack enable
          yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test --ci --runInBand --reporters=default

  secrets-scan:
    name: secrets-scan (gitleaks)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gitleaks scan
        uses: gitleaks/gitleaks-action@v2.3.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_ENABLE_COMMENTS: "false"
          # GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
          # GITLEAKS_CONFIG: ".gitleaks.toml"
