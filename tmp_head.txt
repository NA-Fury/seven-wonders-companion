// store/scoringStore.ts - Enhanced with bug fixes and detailed mode support
import AsyncStorage from '@react-native-async-storage/async-storage';
import type { Draft } from 'immer';
import { create } from 'zustand';
import { immer } from 'zustand/middleware/immer';
import { resolveMilitaryConflictsForAll, resolveNavalConflictsForAll } from '../data/conflicts';
import { computeGuildsForAll } from '../data/guildsResolver';
import { computeLeadersForAll } from '../data/leadersResolver';

export type ScoringMode = 'direct' | 'detailed';

export type CategoryKey =
  | 'wonder'
  | 'treasury'
  | 'military'
  | 'civil'
  | 'commercial'
  | 'science'
  | 'guild'
  | 'cities'
  | 'leaders'
  | 'navy'
  | 'islands'
  | 'edifice';

// Detailed data types for each category
export interface WonderDetails {
  stagesCompleted: boolean[];
  stagePoints: number[];
}

export interface TreasuryDetails {
  coins: number;
  debtFromCards: number;
  debtFromTax: number;
  debtFromPiracy: number;
  commercialPotTaxes: number;
}

export interface MilitaryDetails {
  ageIStrength: number;
  ageIIStrength: number;
  ageIIIStrength: number;
  doveDiplomacyAges: number[];
  boardingTokensApplied: { age: number; count: number }[];
  boardingTokensReceived: { age: number; count: number }[];
  redCardsCount: number;
  chainLinksUsed: number;
  armadaShipPosition?: number;
}

export interface CivilDetails {
  blueCardsCount: number;
  directPointsFromCards: number;
  chainLinksUsed: number;
  armadaShipPosition?: number;
  cardsWithArmadaShips?: number;
}

export interface CommercialDetails {
  yellowCardsCount: number;
  chainLinksUsed: number;
  armadaShipPosition?: number;
  cardsWithArmadaShips?: number;
  citiesCardsCount?: number;
  pointCards: string[];
}

export interface ScienceDetails {
  compasses: number;
  tablets: number;
  gears: number;
  // Optional fixed bonuses by type (leaders, wonders, etc.)
  fixedBonuses?: { compass?: number; tablet?: number; gear?: number };
  // Legacy array support (we will count by type when present)
  bonusSymbols?: { type: 'compass' | 'tablet' | 'gear'; source?: string }[];
  // Wild tokens that can be assigned to any symbol at end of game (Scientists Guild, Babylon/Carthage stage, Golden Archipelago, neighbor-copy, etc.)
  choiceTokens?: number;
  // Tokens that add +1 to your most common symbol (Armada cards, Emerald Archipelago)
  mostCommonPlusTokens?: number;
  // Replace one existing symbol with any symbol (Aganice)
  replaceOneToken?: number; // 0 or 1 typically
  // Cities: copy neighbors' science symbol(s) at end of game (treated as choice tokens here)
  neighborCopies?: number;
  // Detailed breakdown inputs for better UI guidance (optional)
  greenCardsCount?: number;
  greenAddedCompass?: number;
  greenAddedGear?: number;
  greenAddedTablet?: number;
  otherAddedCompass?: number;
  otherAddedGear?: number;
  otherAddedTablet?: number;
  // Misc tracking (optional, not used in calc directly)
  chainLinksUsed?: number;
  armadaShipPosition?: number;
}

export interface GuildDetails {
  guildsPlayed: string[];
  totalPoints: number;
}

export interface CitiesDetails {
  blackCardsCount: number;
  directPointCards: number;
  affectingNeighbors: { positive: number; negative: number };
  cardsPlayed: string[];
}

export interface LeadersDetails {
  leadersPlayed: string[];
  totalPoints: number;
}

export interface NavyDetails {
  ageIStrength: number;
  ageIIStrength: number;
  ageIIIStrength: number;
  armadaShipPosition: number;
  cardsContributing: number;
  blueDoveDiplomacyAges: number[];
}

export interface IslandDetails {
  islandCards: { stage1: number; stage2: number; stage3: number };
  directPoints: number;
  greenShipPosition: number;
  islandsOwned: string[];
}

